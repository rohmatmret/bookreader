---
stages:
#  - Sonarcloud
  - Staging
#  - Production

Staging:
  variables:
    CLUSTERGCP: test
  stage: Staging
  image: google/cloud-sdk
  services:
    - docker:dind
  script:
    #- sed -i 's/%REACT_APP_BASE%/'${_REACT_APP_BASE_URL_PROD}'/g' pages/LoginForm.yaml
    - sed -i "s/REACT_APP_BASE/$REACT_APP_BASE_URL_PROD/g" src/pages/LoginForm.js
    - echo $GCP_SERVICE_KEY > gcloud-service-key.json
    - gcloud auth activate-service-account --key-file gcloud-service-key.json
    - gcloud config set project $GCP_PROJECT_ID
    - gcloud builds submit --config=cloudbuild.yml --substitutions=_CI_COMMIT_REF_NAME=$CI_COMMIT_REF_NAME,_CI_PROJECT_TITLE=$CI_PROJECT_TITLE,_CLUSTERIN=$CLUSTERGCP,_REACT_APP_BASE_URL=$REACT_APP_BASE_URL
  only:
    - /^release/.*$/i

#Sonarcloud:
#  stage: Sonarcloud
#  image:
#    name: sonarsource/sonar-scanner-cli:latest
#    entrypoint: [""]
#  variables:
#    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
#    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
#  cache:
#    key: "${CI_JOB_NAME}"
#    paths:
#      - .sonar/cache
#  script:
#    - sonar-scanner
#  only:
#    - merge_requests
#    - master

#Production:
#  variables:
#    CLUSTERGCP: gramedia-production
#  stage: Production
#  image: google/cloud-sdk
#  services:
#    - docker:dind
#  script:
#    - echo $GCP_SERVICE_KEY > gcloud-service-key.json
#    - gcloud auth activate-service-account --key-file gcloud-service-key.json
#    - gcloud config set project $GCP_PROJECT_ID
#    - gcloud builds submit --config=cloudbuild.yml --substitutions=_CI_COMMIT_REF_NAME=$CI_COMMIT_REF_NAME,_CI_PROJECT_TITLE=$CI_PROJECT_TITLE,_CLUSTERIN=$CLUSTERGCP
#  needs:
#    - job: Sonarcloud
#  when: manual
#  only:
#    - /^release/.*$/i